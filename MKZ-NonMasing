      SUBROUTINE UMAT(STRESS,STATEV,DDSDDE,SSE,SPD,SCD,
     1  RPL,DDSDDT,DRPLDE,DRPLDT,STRAN,DSTRAN,
     2  TIME,DTIME,TEMP,DTEMP,PREDEF,DPRED,MATERL,NDI,NSHR,NTENS,
     3  NSTATV,PROPS,NPROPS,COORDS,DROT,PNEWDT,CELENT,
     4  DFGRD0,DFGRD1,NOEL,NPT,KSLAY,KSPT,KSTEP,KINC)
C
        INCLUDE 'ABA_PARAM.INC'
C
        CHARACTER*80 MATERL
        DIMENSION STRESS(NTENS),STATEV(NSTATV),
     1  DDSDDE(NTENS,NTENS),DDSDDT(NTENS),DRPLDE(NTENS),
     2  STRAN(NTENS),DSTRAN(NTENS),TIME(2),PREDEF(1),DPRED(1),
     3  PROPS(NPROPS),COORDS(3),DROT(3,3),
     4  DFGRD0(3,3),DFGRD1(3,3),TSTRAN(NTENS),CSTRAN(NTENS),
     5  EDDSDDE(NTENS,NTENS)
        double precision, DIMENSION(NTENS)::deviatoricStress
        double precision misesEqualStress,hydroStaticPressure,W
     1   ,ONESY,DEQPL,SYIELD,Gmax,MU,Density
     1   ,BETA,S,GAMA_R,ELAM,EG,EG2,EEG,EEG2,EELAM
         
    
C
        DIMENSION EELAS(6),EPLAS(6),FLOW(6)
        PARAMETER (HALF=0.5D0,ONE=1.0D0,TWO=2.0D0,THREE=3.0D0,SIX=6.0D0,
     1   NINE=9.0D0)
        DATA NEWTON,TOLER/1000,1.D-6/
        REAL:: EQ_C,EQ_MAX,TEQ_MAX,TEQtest,TEQtop,TEQbottom,INCRE,DEQ,EQ
     1   ,EQ_T,TEQ_T,MULtest,TEQ_C,MUL
        INTEGER K1,K2,cn
    

C     PROPS(1) - E
C     PROPS(2) - NU
C     PROPS(3) - SYIELD
C     CALLS AHARD FOR CURVE OF SYIELD VS. PEEQ

C     ELASTIC PROPERTIES
C
        
        Gmax=PROPS(1)
        Density=PROPS(2)
        MU=PROPS(3)
        BETA=PROPS(4)
        S=PROPS(5)
        GAMA_R=PROPS(6)
        
        TSTRAN(1)=STATEV(1)
        TSTRAN(2)=STATEV(2)
        TSTRAN(3)=STATEV(3)
        TSTRAN(4)=STATEV(4)
        TSTRAN(5)=STATEV(5)
        TSTRAN(6)=STATEV(6)
        IC=STATEV(7)
        EQ_C=STATEV(8)
        TEQ_C=STATEV(9)
        EQ_MAX=STATEV(10)
        TEQ_MAX=STATEV(11)
        EQ_T=STATEV(12)
        TEQ_T=STATEV(13)
        Sload=STATEV(14)
        CSTRAN(1)=STATEV(15)
        CSTRAN(2)=STATEV(16)
        CSTRAN(3)=STATEV(17)
        CSTRAN(4)=STATEV(18)
        CSTRAN(5)=STATEV(19)
        CSTRAN(6)=STATEV(20)
        
C       if (kstep.eq.1) then 
C       if (noel==1) then
C       if (npt==1) then 
C     open (105,file='E:\MKZ-4.15\SUB\FINAL\mul.txt',position='append')
C          
C          write(105,*) enterunmber
C          close(105)
C      endif  
C      endif  
C      endif
       
C       GAMA_oct_T=(TWO/THREE)*(((TSTRAN(1)-TSTRAN(2))**TWO+
C    1 (TSTRAN(2)-TSTRAN(3))**TWO+(TSTRAN(3)-TSTRAN(1))**TWO+
C    1 (THREE/TWO)*((TSTRAN(4)/TWO)**TWO+(TSTRAN(5)/TWO)**TWO+
C    1  (TSTRAN(6)/TWO)**TWO))**HALF)
C       
C       GAMA_oct=(TWO/THREE)*(((STRAN(1)-STRAN(2))**TWO+
C    1 (STRAN(2)-STRAN(3))**TWO+(STRAN(3)-STRAN(1))**TWO+
C    1 (THREE/TWO)*((STRAN(4)/TWO)**TWO+(STRAN(5)/TWO)**TWO+
C    1  (STRAN(6)/TWO)**TWO))**HALF)

        
        GAMA_oct_T=(TWO/NINE*(((TSTRAN(1)-CSTRAN(1))-(TSTRAN(2)-
     1   CSTRAN(2)))**TWO+
     1 ((TSTRAN(2)-CSTRAN(2))-(TSTRAN(3)-CSTRAN(3)))**TWO+
     1  ((TSTRAN(3)-CSTRAN(3))-(TSTRAN(1)-CSTRAN(1)))**TWO+
     1 SIX*(((TSTRAN(4)-CSTRAN(4))/TWO)**TWO+((TSTRAN(5)-CSTRAN(5))/TWO)
     1  **TWO+((TSTRAN(6)-CSTRAN(6))/TWO)**TWO)))**HALF
        
        GAMA_oct=(TWO/NINE*(((STRAN(1)-CSTRAN(1))-(STRAN(2)-
     1   CSTRAN(2)))**TWO+
     1 ((STRAN(2)-CSTRAN(2))-(STRAN(3)-CSTRAN(3)))**TWO+
     1  ((STRAN(3)-CSTRAN(3))-(STRAN(1)-CSTRAN(1)))**TWO+
     1 SIX*(((STRAN(4)-CSTRAN(4))/TWO)**TWO+((STRAN(5)-CSTRAN(5))/TWO)
     1  **TWO+((STRAN(6)-CSTRAN(6))/TWO)**TWO)))**HALF
  
C    
C        GAMA_oct_T=(TWO/THREE)*((((TSTRAN(1)-CSTRAN(1))-
C    1  (TSTRAN(2)-CSTRAN(2)))**TWO+((TSTRAN(2)-CSTRAN(2))-
C    1 (TSTRAN(3)-CSTRAN(3)))**TWO+((TSTRAN(3)-CSTRAN(3))-
C    1   (TSTRAN(1)-CSTRAN(1)))**TWO+(THREE/TWO)*
C    1 (((TSTRAN(4)-CSTRAN(4))/TWO)**TWO+
C    1   ((TSTRAN(5)-CSTRAN(5))/TWO)**TWO+
C    1  ((TSTRAN(6)-CSTRAN(6))/TWO)**TWO))**HALF)
        
C       GAMA_oct=(TWO/THREE)*((((STRAN(1)-CSTRAN(1))-
C    1   (STRAN(2)-CSTRAN(2)))**TWO+((STRAN(2)-CSTRAN(2))-
C    1 (STRAN(3)-CSTRAN(3)))**TWO+
C    1 ((STRAN(3)-CSTRAN(3))-(STRAN(1)-CSTRAN(1)))**TWO+
C    1 (THREE/TWO)*(((STRAN(4)-CSTRAN(4))/TWO)**TWO+
C    1  ((STRAN(5)-CSTRAN(5))/TWO)**TWO+
C    1  ((STRAN(6)-CSTRAN(6))/TWO)**TWO))**HALF)
        
        INCRE=GAMA_oct-GAMA_oct_T
         
C       INCRE=((TWO/THREE)*(((STRAN(1)-STRAN(2))**TWO+
C    1 (STRAN(2)-STRAN(3))**TWO+(STRAN(3)-STRAN(1))**TWO+
C    1 (THREE/TWO)*(STRAN(4)**TWO+STRAN(5)**TWO+STRAN(6)**TWO))**HALF)
C    1  )-((TWO/THREE)*(((TSTRAN(1)-TSTRAN(2))**TWO+
C    1 (TSTRAN(2)-TSTRAN(3))**TWO+(TSTRAN(3)-TSTRAN(1))**TWO+
C    1 (THREE/TWO)*(TSTRAN(4)**TWO+TSTRAN(5)**TWO+TSTRAN(6)**TWO))**
C    1 HALF))
        
       IF(INCRE.GE.0) THEN
          Sload=Sload
          DEQ=Sload*ABS(INCRE)
          EQ=EQ_T+DEQ
       ELSE
          Sload=-1.0D0*Sload
           
          CSTRAN(1)=STRAN(1)
          CSTRAN(2)=STRAN(2)
          CSTRAN(3)=STRAN(3)
          CSTRAN(4)=STRAN(4)
          CSTRAN(5)=STRAN(5)
          CSTRAN(6)=STRAN(6)
          
          GAMA_oct_T=(TWO/NINE*(((TSTRAN(1)-CSTRAN(1))-(TSTRAN(2)-
     1   CSTRAN(2)))**TWO+
     1 ((TSTRAN(2)-CSTRAN(2))-(TSTRAN(3)-CSTRAN(3)))**TWO+
     1  ((TSTRAN(3)-CSTRAN(3))-(TSTRAN(1)-CSTRAN(1)))**TWO+
     1 SIX*(((TSTRAN(4)-CSTRAN(4))/TWO)**TWO+((TSTRAN(5)-CSTRAN(5))/TWO)
     1  **TWO+((TSTRAN(6)-CSTRAN(6))/TWO)**TWO)))**HALF
        
        GAMA_oct=(TWO/NINE*(((STRAN(1)-CSTRAN(1))-(STRAN(2)-
     1   CSTRAN(2)))**TWO+
     1 ((STRAN(2)-CSTRAN(2))-(STRAN(3)-CSTRAN(3)))**TWO+
     1  ((STRAN(3)-CSTRAN(3))-(STRAN(1)-CSTRAN(1)))**TWO+
     1 SIX*(((STRAN(4)-CSTRAN(4))/TWO)**TWO+((STRAN(5)-CSTRAN(5))/TWO)
     1  **TWO+((STRAN(6)-CSTRAN(6))/TWO)**TWO)))**HALF
          INCRE=GAMA_oct-GAMA_oct_T
          
          DEQ=Sload*ABS(INCRE)
          EQ=EQ_T+DEQ
          EQ_C=EQ_T
          TEQ_C=TEQ_T
          IF(EQ_C.GE.EQ_MAX) THEN
            EQ_MAX=EQ_C
            TEQ_MAX=TEQ_C
C           CSTRAN(1)=0.0D0
C         CSTRAN(2)=0.0D0
C         CSTRAN(3)=0.0D0
C         CSTRAN(4)=0.0D0
C         CSTRAN(5)=0.0D0
C         CSTRAN(6)=0.0D0
            IC=4
          ELSEIF(EQ_C.LE.(-1*EQ_MAX)) THEN
            EQ_MAX=-1*EQ_C
            TEQ_MAX=-1*TEQ_C
C           CSTRAN(1)=0.0D0
C         CSTRAN(2)=0.0D0
C         CSTRAN(3)=0.0D0
C         CSTRAN(4)=0.0D0
C         CSTRAN(5)=0.0D0
C         CSTRAN(6)=0.0D0
            IC=3
          ELSE
            IC=2
          ENDIF  
       ENDIF  
          
              
       IF(IC.EQ.1) THEN
          MUL=GMAX*((ONE+(ONE-S)*BETA*(EQ/GAMA_R)**S)
     1 /((ONE+BETA*(EQ/GAMA_R)**S)**TWO))
          IC=1
          
       ENDIF
       
       IF(IC.EQ.2) THEN
          MULtest=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ-EQ_C)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ-EQ_C)/TWO/GAMA_R)**S)**TWO))
          TEQtest=TEQ_T+MULtest*DEQ
          IF(DEQ.GE.0) THEN
            TEQtop=TEQ_C+GMAX*(EQ-(-1.0D0*EQ_MAX))/(ONE+BETA*(ABS(EQ-
     1       (-1.0D0*EQ_MAX))/TWO/GAMA_R)**S) 
            
            IF(TEQtest.LE.TEQtop) THEN
               MUL=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ-EQ_C)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ-EQ_C)/TWO/GAMA_R)**S)**TWO))
               IC=2
              
            ELSE 
               MUL=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ+EQ_MAX)/TWO/GAMA_R)**
     1          S)/((ONE+BETA*(ABS(EQ+EQ_MAX)/TWO/GAMA_R)**S)**TWO))
               IC=3
             
            ENDIF
          ELSE
            TEQbottom=TEQ_C+GMAX*(EQ-EQ_MAX)/(ONE+BETA*(ABS(EQ-EQ_MAX)/
     1       TWO/GAMA_R)**S)
            
            IF(TEQtest.GE.TEQbottom) THEN
               MUL=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ-EQ_C)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ-EQ_C)/TWO/GAMA_R)**S)**TWO))
               IC=2
               
            ELSE 
          MUL=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ-EQ_MAX)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ-EQ_MAX)/TWO/GAMA_R)**S)**TWO))
               IC=4
               
            ENDIF
          ENDIF
       ENDIF   
       
       IF(IC.EQ.3) THEN
       MULtest=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ+EQ_MAX)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ+EQ_MAX)/TWO/GAMA_R)**S)**TWO))  
          TEQtest=TEQ_T+MULtest*DEQ
          IF(TEQtest.LE.TEQ_MAX) THEN
             MUL=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ+EQ_MAX)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ+EQ_MAX)/TWO/GAMA_R)**S)**TWO))
             IC=3
             
          ELSE 
             MUL=GMAX*((ONE+(ONE-S)*BETA*(EQ/GAMA_R)**S)
     1 /((ONE+BETA*(EQ/GAMA_R)**S)**TWO))
             IC=1
          CSTRAN(1)=0.0D0
          CSTRAN(2)=0.0D0
          CSTRAN(3)=0.0D0
          CSTRAN(4)=0.0D0
          CSTRAN(5)=0.0D0
          CSTRAN(6)=0.0D0
             
          ENDIF   
       ENDIF 
       
       IF(IC.EQ.4) THEN
       MULtest=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ-EQ_MAX)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ-EQ_MAX)/TWO/GAMA_R)**S)**TWO))  
          TEQtest=TEQ_T+MULtest*DEQ
          IF(TEQtest.GE.(-1*EQ_MAX)) THEN
             MUL=GMAX*((ONE+(ONE-S)*BETA*(ABS(EQ-EQ_MAX)/TWO/GAMA_R)**S)
     1 /((ONE+BETA*(ABS(EQ-EQ_MAX)/TWO/GAMA_R)**S)**TWO))
             IC=4
            
          ELSE 
             MUL=GMAX*((ONE+(ONE-S)*BETA*(EQ/GAMA_R)**S)
     1 /((ONE+BETA*(EQ/GAMA_R)**S)**TWO))
             IC=1
             
          ENDIF   
       ENDIF
       
        TEQ=TEQ_T+MUL*DEQ
        
        ELAM=TWO*MU*MUL/(ONE-TWO*MU)
        EG=MUL
        EG2=TWO*MUL
        DO  K1=1,NTENS
        DO  K2=1,NTENS
        DDSDDE(K2,K1)=0.0
        ENDDO
        ENDDO
C
        DO K1=1,NDI
        DO K2=1,NDI
        DDSDDE(K2,K1)=ELAM
        ENDDO
        DDSDDE(K1,K1)=EG2+ELAM
        ENDDO
        DO K1=NDI+1,NTENS
        DDSDDE(K1,K1)=EG
        ENDDO
        
        EELAM=TWO*MU*Gmax/(ONE-TWO*MU)
        EEG=Gmax
        EEG2=TWO*Gmax
        DO  K1=1,NTENS
        DO  K2=1,NTENS
        EDDSDDE(K2,K1)=0.0
        ENDDO
        ENDDO
C
        DO K1=1,NDI
        DO K2=1,NDI
        EDDSDDE(K2,K1)=EELAM
        ENDDO
        EDDSDDE(K1,K1)=EEG2+EELAM
        ENDDO
        DO K1=NDI+1,NTENS
        EDDSDDE(K1,K1)=EEG
        ENDDO
C
C    CALCULATE STRESS FROM ELASTIC STRAINS
C
        DO K1=1,NTENS
        DO K2=1,NTENS
        STRESS(K2)=STRESS(K2)+DDSDDE(K2,K1)*DSTRAN(K1)
        ENDDO
        ENDDO
C
C    RECOVER ELASTIC AND PLASTIC STRAINS
C       
        DO K1=1,NTENS
        STATEV(K1)=STRAN(K1)
        ENDDO
        STATEV(7)=IC
        STATEV(8)=EQ_C
        STATEV(9)=TEQ_C
        STATEV(10)=EQ_MAX
        STATEV(11)=TEQ_MAX
        STATEV(12)=EQ
        STATEV(13)=TEQ
        STATEV(14)=Sload
C       if (IC.eq.1) then
C       STATEV(15)=0.0D0
C        STATEV(16)=0.0D0
C        STATEV(17)=0.0D0
C        STATEV(18)=0.0D0
C        STATEV(19)=0.0D0
C        STATEV(20)=0.0D0
C        else
        STATEV(15)=CSTRAN(1)
        STATEV(16)=CSTRAN(2)
        STATEV(17)=CSTRAN(3)
        STATEV(18)=CSTRAN(4)
        STATEV(19)=CSTRAN(5)
        STATEV(20)=CSTRAN(6)
C        endif
       
        END
